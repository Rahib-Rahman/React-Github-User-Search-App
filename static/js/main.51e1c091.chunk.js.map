{"version":3,"sources":["components/layout/Navbar.js","context/github/GithubState.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/NotFound.js","components/pages/About.js","components/users/UserItem.js","components/layout/spinner.gif","components/layout/Spinner.js","context/github/githubContext.js","components/users/Users.js","components/users/Search.js","components/pages/Home.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/types.js","context/github/githubReducer.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["Navbar","icon","title","className","to","defaultProps","githubClientId","githubClientSecret","alertContext","createContext","Alert","context","useContext","alert","type","msg","NotFound","About","style","display","justifyContent","alignItems","height","UserItem","user","login","avatar_url","html_url","src","alt","width","Spinner","spinner","margin","githubContext","userStyle","gridTemplateColumns","gridGap","Users","gc","loading","users","map","id","Search","useState","text","setText","ac","onSubmit","e","preventDefault","searchUsers","setAlert","name","placeholder","value","onChange","target","length","onClick","userClear","Home","RepoItem","repo","href","Repos","repos","User","match","useEffect","getUser","params","getUserRepos","location","bio","blog","followers","following","public_repos","public_gists","company","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","githubReducer","dispatch","a","setLoading","axios","get","res","data","items","userName","Provider","children","AlertState","cls","alertReducer","showAlert","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51e1c091.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = ({icon, title}) => {\r\n\r\n      return (\r\n\r\n      <nav className=\"navbar bg-primary\">\r\n        <h2><i className={icon}></i> {title}</h2>\r\n\r\n        <ul>\r\n\r\n          <li>\r\n            <Link to=\"/React-Github-User-Search-App\">Home</Link>\r\n          </li>\r\n\r\n          <li>\r\n            <Link to=\"/React-Github-User-Search-App/about\">Info</Link>\r\n          </li>\r\n\r\n        </ul>\r\n\r\n      </nav>\r\n    )  \r\n}\r\n\r\nNavbar.defaultProps = {\r\n\r\n  title: 'Github Finder',\r\n  icon: 'fab fa-github'\r\n\r\n}\r\n\r\nNavbar.propTypes = {\r\n\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, {useReducer} from 'react'\r\n\r\nimport axios from 'axios'\r\n\r\nimport githubContext from './githubContext'\r\n\r\nimport githubReducer from './githubReducer'\r\n\r\nimport { SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_REPOS,GET_USER } from '../types'\r\n\r\nlet githubClientId;\r\n\r\nlet githubClientSecret;\r\n\r\nif(process.env.NODE_ENV !== 'production'){\r\n\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n\r\n}else {\r\n\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n\r\n}\r\n\r\nconst GithubState = props => {\r\n\r\n  const initialState = {\r\n\r\n    users:[],\r\n    user:{},\r\n    repos:[],\r\n    loading:false\r\n\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  \r\n  const searchUsers = async text => {\r\n\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n\r\n    );\r\n\r\n    dispatch({\r\n\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n\r\n    });\r\n\r\n  };\r\n\r\n  const getUser = async userName => {\r\n\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n\r\n      `https://api.github.com/users/${userName}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n\r\n    );\r\n\r\n    dispatch({type:GET_USER, payload:res.data});\r\n\r\n  };\r\n\r\n  const getUserRepos = async userName => {\r\n\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n\r\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n   \r\n    );\r\n\r\n    dispatch({\r\n\r\n      type:GET_REPOS,\r\n      payload:res.data,\r\n\r\n    });\r\n\r\n  };\r\n\r\n  const userClear = () => dispatch({type:CLEAR_USERS});\r\n\r\n  const setLoading = () => dispatch({type:SET_LOADING})\r\n\r\n  return <githubContext.Provider \r\n\r\n    value={\r\n\r\n      {users: state.users,\r\n      user: state.user,\r\n      repos:state.repos,\r\n      loading: state.loading,\r\n      searchUsers,\r\n      userClear,\r\n      getUser,\r\n      getUserRepos\r\n\r\n      }\r\n\r\n    }\r\n\r\n  >\r\n\r\n  {props.children}\r\n\r\n  </githubContext.Provider>\r\n  \r\n}\r\n\r\n\r\nexport default GithubState;","import {createContext} from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext; ","import React, {useContext} from 'react'\r\n\r\nimport alertContext from '../../context/alert/alertContext'\r\n\r\nconst Alert = () => {\r\n\r\n  const context = useContext(alertContext) ;\r\n  \r\n  return (\r\n\r\n    context.alert !== null && (\r\n\r\n      <div className={`alert alert-${context.alert.type}`}>\r\n        <i className='fa fa-info-circle'/>  {context.alert.msg}\r\n      </div>\r\n\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert\r\n","import React, {Fragment} from 'react'\r\n\r\nconst NotFound = () => {\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n      <h1>404 Not Found</h1>\r\n      <p className=\"lead\">The page you are looking for doesn't exist...</p>\r\n    </Fragment>\r\n\r\n  )\r\n  \r\n}\r\n\r\nexport default NotFound\r\n","import React, {Fragment} from 'react'\r\n\r\nconst About = () => {\r\n\r\n  return (\r\n\r\n    <Fragment>\r\n\r\n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '30vh'}} >\r\n      <h1>A React Js Project to Search Github Users and View their Profiles & Details.</h1>     \r\n      </div>\r\n      \r\n      <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', height: '10vh'}} >\r\n      <h1>Developed by @Rahib</h1>     \r\n      </div>\r\n\r\n    </Fragment>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst UserItem = ({user: {login, avatar_url, html_url}}) => {\r\n\r\n    return (\r\n\r\n      <div className=\"card text-center\">\r\n\r\n        <img \r\n          src={avatar_url} \r\n          alt=\"User Avater\"\r\n          className=\"round-img\"\r\n          style={{ width:'60px' }}\r\n        />\r\n\r\n        <h3>{login}</h3>\r\n        <div>\r\n          <Link to={`React-Github-User-Search-App/user/${login}`} className=\"btn btn-dark btn-sm my-1\">More</Link>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nUserItem.propTypes = {\r\n\r\n  user: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nexport default UserItem\r\n","export default __webpack_public_path__ + \"static/media/spinner.a6f05fbe.gif\";","import React, {Fragment} from 'react'\r\n\r\nimport spinner from './spinner.gif'\r\n\r\nconst Spinner = () => <Fragment><img src={spinner} alt=\"Loading...\" style={{ width: '200px', margin: 'auto', display: 'block' }}/></Fragment>\r\n\r\nexport default Spinner\r\n","import {createContext} from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext; ","import React , {useContext} from 'react'\r\n\r\nimport UserItem from './UserItem'\r\n\r\nimport Spinner from '../layout/Spinner'\r\n\r\nimport githubContext from '../../context/github/githubContext'\r\n\r\nconst Users = () => {\r\n  \r\n  const gc = useContext(githubContext);\r\n\r\n    const {loading, users} = gc;\r\n\r\n    if(loading){\r\n\r\n      return <Spinner />\r\n\r\n    }\r\n    else {\r\n\r\n    return (\r\n\r\n      <div style={userStyle}>\r\n        {\r\n          users.map(user =>(\r\n            <UserItem key={user.id} user={user}/>\r\n          ))\r\n        }\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n}\r\nconst userStyle = {\r\n  \r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n\r\n}\r\n\r\nexport default Users\r\n\r\n","import React, {useState, useContext} from 'react'\r\n\r\nimport githubContext from '../../context/github/githubContext'\r\n\r\nimport alertContext from '../../context/alert/alertContext'\r\n\r\nconst Search = () => {\r\n\r\n  const [text, setText] = useState('');\r\n  \r\n  const gc = useContext(githubContext);\r\n  const ac = useContext(alertContext);\r\n\r\n  const onChange = (e) => {\r\n\r\n    setText(e.target.value);\r\n\r\n  }\r\n  \r\n  const onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if(text === ''){\r\n      ac.setAlert('Please Enter Something', 'info');\r\n      return;\r\n    }\r\n\r\n    gc.searchUsers(text);\r\n    setText('');\r\n    \r\n  }\r\n    \r\n    return (\r\n\r\n      <div>\r\n        <form onSubmit={onSubmit}>\r\n\r\n          <div className=\"form\">\r\n            <input type=\"text\" name=\"text\" placeholder=\"Search Github Users Here...\" value={text} onChange={onChange}/>\r\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\"/>\r\n          </div>\r\n\r\n        </form>\r\n\r\n        {gc.users.length >0 && <button className=\"btn btn-warnning btn-block\" onClick={gc.userClear}>Clear</button>}\r\n\r\n      </div>\r\n\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport default Search\r\n","import React, { Fragment } from 'react';\r\n\r\nimport Users from '../users/Users'\r\n\r\nimport Search from '../users/Search'\r\n\r\nconst Home = () => \r\n\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RepoItem = ({repo}) => {\r\n\r\n  return (\r\n\r\n    <div className=\"card\">\r\n      <h3><a href={repo.html_url}>{repo.name}</a></h3>\r\n    </div>\r\n\r\n  )\r\n  \r\n}\r\n\r\nRepoItem.propTypes = {\r\n\r\n  repo: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nexport default RepoItem\r\n","import React from 'react'\r\n\r\nimport RepoItem from './RepoItem'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Repos = ({repos}) => {\r\n\r\n  return repos.map(repo=><RepoItem repo={repo} key={repo.id}/>);\r\n\r\n}\r\n\r\nRepos.propTypes = {\r\n\r\n  repos: PropTypes.array.isRequired,\r\n\r\n}\r\n\r\nexport default Repos\r\n","import React, { useEffect, Fragment ,useContext } from 'react'\r\n\r\nimport Spinner from '../layout/Spinner'\r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Repos from '../repos/Repos'\r\n\r\nimport githubContext from '../../context/github/githubContext'\r\n\r\nconst User = ({match}) => {\r\n\r\n  const context = useContext(githubContext) \r\n  useEffect(() => {\r\n    context.getUser(match.params.login);\r\n    context.getUserRepos(match.params.login); \r\n  },[]);\r\n\r\n    const { name, avatar_url, location, bio, blog, html_url, followers, following, login, public_repos, public_gists, company, } = context.user;\r\n\r\n\r\n    if(context.loading) return <Spinner/>;\r\n    \r\n    return (\r\n\r\n      <Fragment>\r\n\r\n        <Link to=\"/React-Github-User-Search-App\" className=\"btn btn-light\">\r\n          Search Again\r\n        </Link>\r\n\r\n        <div className=\"card grid-2\">\r\n          <div className=\"all-center\">\r\n            <img src={avatar_url} alt=\"avatar\" className=\"round-img\" style={{ width:'150px' }}/>\r\n            <h1>{name}</h1>\r\n            <p>Location: {location}</p>\r\n          </div>\r\n          <div>\r\n            {bio && (\r\n              <Fragment>\r\n                <h3>Bio</h3>\r\n                <p>{bio}</p>\r\n              </Fragment>\r\n            )}\r\n\r\n            <a href={html_url} className=\"btn btn-dark my-1\">Visit Github Profile</a>\r\n            <ul>\r\n              <li>\r\n                {login && (\r\n                  <Fragment>\r\n                    <strong>Username: </strong> {login}\r\n                  </Fragment>\r\n                )}\r\n\r\n              </li>\r\n              <li>\r\n\r\n                {company && (\r\n                  <Fragment>\r\n                    <strong>Company: </strong> {company}\r\n                  </Fragment>\r\n\r\n                )}\r\n              </li>\r\n              <li>\r\n\r\n                {blog && (\r\n                  <Fragment>\r\n                    <strong>Website: </strong> {blog}\r\n                  </Fragment>\r\n\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card text-center\">\r\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n          <div className=\"badge badge-success\">Following: {following}</div>\r\n          <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n          <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n        </div>\r\n\r\n        <Repos repos={context.repos}/>\r\n\r\n      </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default User\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT'; ","import { SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_REPOS,GET_USER } from '../types'\r\n\r\nexport default (state,action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading:false\r\n      }\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users:[]\r\n      }\r\n\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user:action.payload,\r\n        loading: false,\r\n      }\r\n\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos:action.payload,\r\n        loading: false,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  \r\n}","import { SET_ALERT } from '../types'\r\n\r\nexport default (state,action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case SET_ALERT:\r\n      return {\r\n        ...state,\r\n        alert: action.payload,\r\n      }\r\n\r\n    default:\r\n\r\n      return state;\r\n\r\n  }\r\n  \r\n}","import React, {useReducer} from 'react'\r\n\r\nimport alertContext from './alertContext'\r\n\r\nimport alertReducer from './alertReducer'\r\n\r\nimport { SET_ALERT } from '../types'\r\n\r\nconst AlertState = props => {\r\n\r\n  const initialState = {\r\n\r\n    alert:null\r\n\r\n  }\r\n\r\n  const showAlert = (msg, cls) => {\r\n\r\n    setAlert({msg, cls});\r\n    setTimeout(() => {setAlert(null)}, 2000);\r\n\r\n  };\r\n\r\n  const setAlert = (msg, cls) =>{\r\n\r\n    dispatch({type:SET_ALERT,payload:{msg, cls}});\r\n\r\n  }\r\n\r\n\r\n  const [state, dispatch] = useReducer(alertReducer, initialState);\r\n \r\n  return <alertContext.Provider \r\n\r\n    value={\r\n\r\n      {\r\n        alert:state.alert,\r\n        showAlert,\r\n        setAlert\r\n      }\r\n\r\n    }\r\n  >\r\n\r\n  {props.children}\r\n  \r\n  </alertContext.Provider>\r\n\r\n}\r\n\r\nexport default AlertState;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/layout/Navbar';\r\n\r\nimport Alert from './components/layout/Alert';\r\n\r\nimport NotFound from './components/pages/NotFound';\r\n\r\nimport About from './components/pages/About';\r\n\r\nimport Home from './components/pages/Home';\r\n\r\nimport User from './components/users/User';\r\n\r\nimport GithubState from './context/github/GithubState';\r\n\r\nimport AlertState from './context/alert/AlertState';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n\r\n    <GithubState>\r\n      <AlertState>\r\n        <Router>\r\n\r\n          <div className=\"App\">\r\n            <Navbar title=\"Githhub User Search\" icon=\"fab fa-github\" />\r\n            <div className=\"container\">\r\n\r\n              <Alert />\r\n\r\n              <Switch>\r\n                <Route exact path=\"/React-Github-User-Search-App\" component={Home} />\r\n                <Route exact path=\"/React-Github-User-Search-App/user/:login\" component={User} />\r\n                <Route exact path=\"/React-Github-User-Search-App/about\" component={About} />\r\n                <Route path=\"/React-Github-User-Search-App/about\" component={NotFound} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </Router>\r\n      </AlertState>\r\n    </GithubState>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}